@model debt_fe.Models.ChangePasswordViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Change Password";
}

<div class="row mt+++">
    <div class="col-md-6 col-md-offset-3 mt+++">
        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", autocomplete = "off" }))
        {
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <p class="text-info text-center mb++">@ViewBag.Message</p>
            @Html.HiddenFor(m => m.OldPassHidden);
            <div class="form-group">
                @Html.LabelFor(m => m.OldPass, new { @class = "col-md-5 control-label" })
                <div class="col-md-6">
                    @Html.PasswordFor(m => m.OldPass, new { @class = "form-control", autocomplete = "off" })
                </div>
                <label class="text-danger col-md-1">*</label>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.NewPass, new { @class = "col-md-5 control-label" })
                <div class="col-md-6">
                    @Html.PasswordFor(m => m.NewPass, new { @class = "form-control", autocomplete = "off" })
                </div>
                <label class="text-danger col-md-1">*</label>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-5 control-label",  })
                <div class="col-md-6">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" , autocomplete = "off" })
                </div>
                <label class="text-danger col-md-1">*</label>
            </div>
            <div class="form-group">
                <div class="col-md-7 col-lg-offset-5">
                    <input type="submit" value="Change Password" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}